# -------------------------------------------------------------------------------
# Load completion system
# -------------------------------------------------------------------------------

autoload -Uz compinit
compinit

# -------------------------------------------------------------------------------
# Set auto change directory
# -------------------------------------------------------------------------------

setopt auto_cd
setopt inc_append_history
setopt share_history

# -------------------------------------------------------------------------------
# Aliases 
# -------------------------------------------------------------------------------

alias hload="fc -R $HOME/.zsh_history"
alias rload="source $HOME/.zshrc"
alias rmtar="rm -rf *.tar.gz"
alias nv="nvim"
alias rm="rm -rf"
alias mkdir="mkdir -p"
alias ll="ls -al --group-directories-first"
alias ls="ls --color=tty --group-directories-first"
alias shutdown="shutdown -h now"
alias grep="grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}"
alias cx="chmod +x *.sh"

# Navigation
alias t1="tree --dirsfirst -C -L 1 ."
alias t2="tree --dirsfirst -C -L 2 ."
alias t3="tree --dirsfirst -C -L 3 ."
alias t4="tree --dirsfirst -C -L 4 ."

# Configuration
alias dz="nvim $HOME/.zshrc"
alias de="nvim $HOME/.zshenv"
alias di="nvim $HOME/.config/i3/config"
alias dn="cd $HOME/.config/nvim && nvim"
alias da="nvim $HOME/.config/alacritty/alacritty.yml"

# -------------------------------------------------------------------------------
# Update path variable
# -------------------------------------------------------------------------------

# User env vars
path+="$HOME/.local/bin"                   # poetry
path+="$HOME/.cargo/bin"                   # poetry
path+="$HOME/go/bin"                       # go program binanries
path+="$HOME/lua/lua-language-server/bin"  # lua lsp

# System wide env vars
# path+="/usr/local/go/bin"                  # go program binanries

# -------------------------------------------------------------------------------
# Plugins
# -------------------------------------------------------------------------------

fpath+="$HOME/.zsh/zsh-completions"

source "$HOME/.zsh/z/z.sh"
source "$HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$HOME/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh"

# -------------------------------------------------------------------------------
# Command Prompt
# -------------------------------------------------------------------------------

autoload -U promptinit
promptinit

function git_branch_name()
{
    branch=$(git symbolic-ref --short HEAD 2> /dev/null | awk '{print $NF}')
    if [[ $branch == "" ]]; then
        echo ''
    else
        echo '\n('$branch')'
    fi
}

# Enable substitution in the prompt.
setopt prompt_subst

# Config for prompt. PS1 synonym.
prompt=$'%B%F{240}$(git_branch_name)%f%b\n'
prompt+=$'%B%(?.%F{green}*.%F{red}* [%?])%f%b %F{242}%~%f %F{cyan}>%f '

# -------------------------------------------------------------------------------
# Custom Functions
# -------------------------------------------------------------------------------

# Function to load a set of env vars from a defined file.
# 
# Example:
#   envload .env
function envload() {
    export $(cat $1 | egrep -v "(^#.*|^$)" | xargs)
}

# -------------------------------------------------------------------------------
# Vim Mode
# -------------------------------------------------------------------------------

bindkey -v
# Make switch between vim modes faster
export KEYTIMEOUT=1
# Gives access to menuselect
zmodload zsh/complist

# Key bindings 
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# A visual indicator to show the current mode
function cursor_mode() {
    cursor_block='\e[2 q'
    cursor_beam='\e[6 q'

    function zle-keymap-select {
        if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
            echo -ne $cursor_block
        elif [[ ${KEYMAP} == main ]] || [[ ${KEYMAP} == viins ]] || [[ ${KEYMAP} = '' ]] || [[ $1 = 'beam' ]]; then
            echo -ne $cursor_beam
        fi
    }

    zle-line-init() {
        echo -ne $cursor_beam
    }

    zle -N zle-keymap-select
    zle -N zle-line-init
}

cursor_mode
